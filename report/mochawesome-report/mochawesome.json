{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-11T11:36:33.741Z",
    "end": "2022-10-11T11:36:35.274Z",
    "duration": 1533,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b513fbbf-0926-437e-9db7-f33ecd435638",
      "title": "",
      "fullFile": "cypress\\e2e\\AccessToPetStoreOrdersAPIspec.cy.ts",
      "file": "cypress\\e2e\\AccessToPetStoreOrdersAPIspec.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11831dff-9eb1-46c5-a66e-54db605d1e1a",
          "title": "Access to Petstore Orders",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST Request - Place an order for a pet",
              "fullTitle": "Access to Petstore Orders POST Request - Place an order for a pet",
              "timedOut": null,
              "duration": 912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(url);\nvar urlPlacePetOrder = url + 'store/order';\ncy.request({\n    method: 'POST',\n    url: urlPlacePetOrder,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: requestBody\n})\n    .then(function (response) {\n    expect(response.status).to.equal(200);\n    expect(response.body).not.null;\n    expect(response.body.status).to.equal('placed');\n    cy.task('setOrderId', response.body.id);\n    cy.log('Post Request response body is:' + JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "c0baf213-cbd4-4f0a-94be-a110cdc0c7e6",
              "parentUUID": "11831dff-9eb1-46c5-a66e-54db605d1e1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET Request - Find Purchase Order by ID",
              "fullTitle": "Access to Petstore Orders GET Request - Find Purchase Order by ID",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var urlGetOrderDtls = url + 'store/order/120';\ncy.request({\n    method: 'GET',\n    url: urlGetOrderDtls,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    failOnStatusCode: false\n})\n    .then(function (response) {\n    expect(response.status).to.equal(404);\n    expect(response.body).not.null;\n    expect(response.body.message).to.equal('Order not found');\n    cy.log('Order Summary Details is:' + JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "7ad3a18a-b178-40fd-a58d-f4bbcb37d974",
              "parentUUID": "11831dff-9eb1-46c5-a66e-54db605d1e1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE Request -DELETE Purchase Order by ID",
              "fullTitle": "Access to Petstore Orders DELETE Request -DELETE Purchase Order by ID",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getOrderId').then(function (orderId) {\n    var urlDeleteRequest = url + 'store/order' + orderId;\n    cy.request({\n        method: 'GET',\n        url: urlDeleteRequest,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        failOnStatusCode: false\n    })\n        .then(function (response) {\n        expect(response.status).to.equal(404);\n        expect(response.body.code);\n    });\n});",
              "err": {},
              "uuid": "9f294d3c-3cd0-463c-bc2f-0c414d28f92d",
              "parentUUID": "11831dff-9eb1-46c5-a66e-54db605d1e1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET Request - Returns pet Inventories by Status",
              "fullTitle": "Access to Petstore Orders GET Request - Returns pet Inventories by Status",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var urlGetInventory = url + 'store/inventory';\ncy.request({\n    method: 'GET',\n    url: urlGetInventory,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n})\n    .then(function (response) {\n    expect(response.status).to.equal(200);\n    expect(response.body).not.null;\n    cy.log('Inventory details:' + JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "ad7ccb07-ddd3-4b6a-b8a7-7ac93e8c4df1",
              "parentUUID": "11831dff-9eb1-46c5-a66e-54db605d1e1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0baf213-cbd4-4f0a-94be-a110cdc0c7e6",
            "7ad3a18a-b178-40fd-a58d-f4bbcb37d974",
            "9f294d3c-3cd0-463c-bc2f-0c414d28f92d",
            "ad7ccb07-ddd3-4b6a-b8a7-7ac93e8c4df1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}